React.initializeTouchEvents(true);var labelToId={};var prevEndTime=null;var soundPath="sounds/";var soundList=[{id:"bloop_d",src:"bloop_d.ogg"},{id:"bloop_g",src:"bloop_g.ogg"},{id:"bell_1",src:"bell_1.ogg"}];createjs.Sound.alternateExtensions=["mp3"];function pad2(str){str=""+str;return str.length<2?"0"+str:str}var Stopwatch=React.createClass({displayName:"Stopwatch",getInitialState:function(){var currProps=this.props;var gIS_endTime=0;var gIS_timerValue=0;var baseTime=prevEndTime||Date.now().valueOf();if(!currProps.countUp){gIS_endTime=baseTime+currProps.timerMax;gIS_timerValue=currProps.timerMax}var gIS_expectedEndTime=null;if(currProps.timerMax>0){if(currProps.autorun)gIS_expectedEndTime=baseTime+currProps.timerMax}else{if(!currProps.countUp)gIS_expectedEndTime=baseTime}return{startTime:baseTime,endTime:gIS_endTime,expectedEndTime:gIS_expectedEndTime,timerValue:gIS_timerValue,running:currProps.autorun,lastButtonEvent:"none"}},componentDidMount:function(){this.interval=setInterval(this.tick,10);if(this.state.running){document.getElementById(this.props.id).classList.add("running");this.playbackSound(this.props.onPlaySound)}else{document.getElementById(this.props.id).classList.remove("running")}},componentWillUnmount:function(){clearInterval(this.interval);document.getElementById(this.props.id).classList.remove("running")},componentWillReceiveProps:function(nextProps){var currState=this.state;var currProps=this.props;if(nextProps.countUp!=currProps.countUp||nextProps.timerMax!=currProps.timerMax){this.correctStartEndTimes(nextProps)}if(!currState.running){if(currState.timerValue==0&&!nextProps.countUp&&nextProps.timerMax>0){this.setState({timerValue:nextProps.timerMax})}else if(currState.timerValue==currProps.timerMax&&!currProps.countUp&&nextProps.countUp){this.setState({timerValue:0})}else if(!currProps.countUp&&!nextProps.countUp&&nextProps.timerMax<currState.timerValue){this.setState({timerValue:nextProps.timerMax})}}},toggle:function(event){event.preventDefault();if(this.state.running){this.pause();this.playbackSound(this.props.onPauseSound);document.getElementById(this.props.id).classList.remove("running")}else{this.resume();this.playbackSound(this.props.onPlaySound);document.getElementById(this.props.id).classList.add("running")}},pause:function(){this.setState({timerValue:this.state.timerValue,running:false})},resume:function(){console.log("Resuming: ");if(!this.state.running){this.correctStartEndTimes(this.props)}this.setState({running:true})},reset:function(event){event.preventDefault();if(this.props.countUp){this.setState({timerValue:0,running:false})}else{this.setState({timerValue:this.props.timerMax,running:false})}this.playbackSound(this.props.onResetSound);document.getElementById(this.props.id).classList.remove("running")},tick:function(){var currState=this.state;if(currState.running){var currProps=this.props;var newTimerValue;if(currState.expectedEndTime&&Date.now().valueOf()>=currState.expectedEndTime){this.next()}else{if(currProps.countUp){newTimerValue=Date.now().valueOf()-currState.startTime;this.setState({timerValue:newTimerValue})}else{newTimerValue=currState.endTime-Date.now().valueOf();this.setState({timerValue:newTimerValue})}}}},correctStartEndTimes:function(nextProps){if(nextProps.countUp){var nextExpectedEndTime=null;if(nextProps.timerMax>0)nextExpectedEndTime=Date.now().valueOf()+(nextProps.timerMax-this.state.timerValue);this.setState({startTime:Date.now().valueOf()-this.state.timerValue,expectedEndTime:nextExpectedEndTime})}else{var endTimeOffset=this.state.timerValue;if(nextProps.timerMax>0&&this.state.timerValue>nextProps.timerMax){endTimeOffset=nextProps.timerMax}this.setState({endTime:Date.now().valueOf()+endTimeOffset,expectedEndTime:Date.now().valueOf()+endTimeOffset})}},previous:function(event){event.preventDefault();this.props.s_onPrevious();document.getElementById(this.props.id).classList.remove("running")},next:function(event){var expectedEndTime=this.state.expectedEndTime;if(event){event.preventDefault();expectedEndTime=null}else{this.playbackSound(this.props.onEndSound)}if(!this.props.s_onNext(expectedEndTime)){this.setState({timerValue:this.props.timerMax,running:false})}document.getElementById(this.props.id).classList.remove("running")},playbackSound:function(sound){if(sound&&this.props.soundEnabled)createjs.Sound.play(sound)},render:function(){var currState=this.state;var tValue=currState.timerValue;var cs=Math.floor(tValue%1e3/10);var sec=Math.floor(tValue/1e3)%60;var min=Math.floor(tValue/6e4)%60;var hrs=Math.floor(tValue/36e5);var display=[];function pad2(str){str=""+str;return str.length<2?"0"+str:str}display.push(pad2(min));display.push(pad2(sec));display.push(pad2(cs));var toggleButton;if(currState.running)toggleButton=React.createElement("i",{className:"fa fa-pause"});else toggleButton=React.createElement("i",{className:"fa fa-play"});return React.createElement("div",{className:"stopwatchWrapper noSelect"},React.createElement("p",{className:"stopwatchDisplay"},React.createElement("span",{id:"hourDisplay"},pad2(hrs),":"),display.join(":")),React.createElement("p",{className:"stopwatchLinks"},React.createElement("span",null,React.createElement("span",{className:"stopwatchLinksWrapper"},React.createElement("a",{className:"leftRightButton hvr-sweep-to-left",href:"javascript:void(0)",onTouchStart:this.previous,onMouseDown:this.previous},React.createElement("i",{className:"fa fa-step-backward doubleArrow"})),React.createElement("a",{id:"toggleButton",className:"bigButton",href:"javascript:void(0)",onTouchStart:this.toggle,onMouseDown:this.toggle},toggleButton),React.createElement("a",{id:"resetButton",className:"bigButton",href:"javascript:void(0)",onTouchStart:this.reset,onMouseDown:this.reset},React.createElement("i",{className:"fa fa-undo fa-flip-horizontal"})),React.createElement("a",{className:"leftRightButton hvr-sweep-to-right",href:"javascript:void(0)",onTouchStart:this.next,onMouseDown:this.next},React.createElement("i",{className:"fa fa-step-forward doubleArrow"}))))))}});var Module=React.createClass({displayName:"Module",getInitialState:function(){return this.getResetState()},getResetState:function(){var fields=this.computeOldTimerMaxFields();return{labelField:this.props.label,hrsField:pad2(fields.hrsField),minField:pad2(fields.minField),secField:pad2(fields.secField),csField:pad2(fields.csField),preBlankFieldValue:null,onPlaySelectedSound:this.props.onPlaySound,onPauseSelectedSound:this.props.onPauseSound,onResetSelectedSound:this.props.onResetSound,onEndSelectedSound:this.props.onEndSound}},handlePropUpdate:function(newProps){this.props.m_moduleUpdate(newProps,this.props)},log:function(message){console.log("id: "+this.props.id+" : "+message)},blankField:function(event){var newState={preBlankFieldValue:this.state[event.target.dataset.tag]};newState[event.target.dataset.tag]="";this.setState(newState);this.refs.unitLabel.getDOMNode().style.display="block"},restoreOnBlur:function(event){var fieldName=event.target.dataset.tag;var newState={preBlankFieldValue:null};var newFieldValue=this.state[event.target.dataset.tag];if(!newFieldValue.trim()){if(this.state.preBlankFieldValue!=null){newFieldValue=this.state.preBlankFieldValue}else{var oldFields=this.computeOldTimerMaxFields();newFieldValue=oldFields[event.target.dataset.tag]}}newFieldValue=pad2(newFieldValue);newState[event.target.dataset.tag]=newFieldValue;this.setState(newState);this.refs.unitLabel.getDOMNode().style.display="none"},handleFieldChange:function(event){var newState={};var eventTarget=event.target;var fieldValue=(event.target.value||"").trim();var fieldName=eventTarget.dataset.tag;if(fieldName==="labelField"){newState[fieldName]=fieldValue.replace(/\W/g,"")}else{newState[fieldName]=fieldValue.replace(/([^0-9])/g,"")}if(newState[fieldName]!=fieldValue){this.log("Invalid characters entered for "+fieldName+", ignoring update...");eventTarget.classList.remove("invalidInput");eventTarget.offsetWidth=eventTarget.offsetWidth;eventTarget.classList.add("invalidInput")}else{this.setState(newState)}},handleSoundChange:function(event){var newState={};newState[event.target.dataset.tag]=event.target.value;this.setState(newState)},updateAutorun:function(event){var newAutorun=event.target.checked;this.log("updateAutorun was called. value: "+newAutorun);var newProps=React.addons.update(this.props,{autorun:{$set:newAutorun}});this.handlePropUpdate(newProps)},updateCountUp:function(event){this.log("updateCountUp was called. value: "+event.target.value);var newCountUp=event.target.value=="true";if(this.props.countUp!=newCountUp){var newProps=React.addons.update(this.props,{countUp:{$set:newCountUp}});this.handlePropUpdate(newProps)}},updateSoundEnabled:function(event){var newSoundEnabled=event.target.checked;var newProps=React.addons.update(this.props,{soundEnabled:{$set:newSoundEnabled}});this.handlePropUpdate(newProps)},resetModuleState:function(){this.setState(this.getResetState());this.setUpdateButton()},updatePropsWithState:function(){if(this.validateInput()){var newProps=React.addons.update(this.props,{timerMax:{$set:this.computeNewTimerMax()},label:{$set:this.state.labelField},onPlaySound:{$set:this.state.onPlaySelectedSound},onPauseSound:{$set:this.state.onPauseSelectedSound},onResetSound:{$set:this.state.onResetSelectedSound},onEndSound:{$set:this.state.onEndSelectedSound}});this.handlePropUpdate(newProps)}},shouldComponentUpdate:function(nextProps,nextState){return this.props!==nextProps||this.state!==nextState},componentDidUpdate:function(){this.log("Module component updated!");if(this.verifyTimerMaxFields(false)){var newTimerMax=this.computeNewTimerMax();if(this.props.timerMax==newTimerMax){this.resetModuleState()}}this.setUpdateButton()},computeOldTimerMaxFields:function(){var tMax=this.props.timerMax;var fields={};fields.csField=Math.floor(tMax%1e3/10);fields.secField=Math.floor(tMax/1e3)%60;fields.minField=Math.floor(tMax/6e4)%60;fields.hrsField=Math.floor(tMax/36e5);return fields},computeNewTimerMax:function(){var currState=this.state;var newTimerMax=parseInt(currState.hrsField,10)*36e5;newTimerMax+=parseInt(currState.minField,10)*6e4;newTimerMax+=parseInt(currState.secField,10)*1e3;newTimerMax+=parseInt(currState.csField,10)*10;return newTimerMax},verifyTimerMaxFields:function(canMatchExistingValues){var original=this.computeOldTimerMaxFields();var currState=this.state;var update={};update.hrs=parseInt(currState.hrsField,10);update.min=parseInt(currState.minField,10);update.sec=parseInt(currState.secField,10);update.cs=parseInt(currState.csField,10);return update.hrs>=0&&update.min>=0&&update.sec>=0&&update.cs>=0&&(canMatchExistingValues||original.hrsField!=update.hrs||original.minField!=update.min||original.secField!=update.sec||original.csField!=update.cs)},setUpdateButton:function(){this.log("setUpdateButton was called.");if(this.validateInput()){this.log("Revealing update button...");this.refs.updateButtonWrapper.getDOMNode().className+=" untucked"}else{this.refs.updateButtonWrapper.getDOMNode().className="updateButtonWrapper"}},validateInput:function(){var label=this.state.labelField||"";return(this.verifyTimerMaxFields(false)||label!=this.props.label||this.state.onPlaySelectedSound!=this.props.onPlaySound||this.state.onEndSelectedSound!=this.props.onEndSound||this.state.onPauseSelectedSound!=this.props.onPauseSound||this.state.onResetSelectedSound!=this.props.onResetSound)&&(this.verifyTimerMaxFields(true)&&label.trim()!=""&&(labelToId[label]==this.props.id||!labelToId[label]))},enterKeyUpdate:function(event){if(event.charCode==13)this.updatePropsWithState()},deleteSelf:function(event){event.preventDefault();console.log("deleteSelf was called");this.props.m_delete(this.props.id)},render:function(){var upToDownFrom;if(this.props.countUp)upToDownFrom="Up Towards:";else upToDownFrom="Down From:";var soundOptionsList=[];var soundListLocal=soundList;for(var i=0;i<soundListLocal.length;i++){soundOptionsList.push(React.createElement("option",{value:soundListLocal[i].id},soundListLocal[i].id))}return React.createElement("div",{id:this.props.id,className:"Module"},React.createElement("div",{className:"tabs"},React.createElement("div",{className:"deleteButton noSelect",onClick:this.deleteSelf},React.createElement("i",{className:"fa fa-times"})),React.createElement("div",{className:"tab"},React.createElement("input",{type:"radio",id:this.props.id+"-1",name:this.props.id,defaultChecked:true}),React.createElement("label",{htmlFor:this.props.id+"-1"},"General"),React.createElement("div",{className:"content"},React.createElement("table",null,React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"Run Automatically:"),React.createElement("td",{className:"tableRight"},React.createElement("input",{type:"checkbox",defaultChecked:this.props.autorun,onChange:this.updateAutorun}))),React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"Count Direction:"),React.createElement("td",{className:"tableRight"},React.createElement("select",{value:""+this.props.countUp,onChange:this.updateCountUp},React.createElement("option",{value:"true"},"up"),React.createElement("option",{value:"false"},"down"))))),React.createElement("div",{className:"updatableDivider"}),React.createElement("div",{className:"updatableWrapper"},React.createElement("table",null,React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"Label:"),React.createElement("td",{className:"tableRight"},React.createElement("input",{type:"text",value:this.state.labelField,onChange:this.handleFieldChange,onKeyPress:this.enterKeyUpdate,"data-tag":"labelField",ref:"labelField"}))))),React.createElement("div",{className:"updatableWrapper limitInputWrapper"},React.createElement("p",null,"Count ",upToDownFrom),React.createElement("input",{type:"text",value:this.state.hrsField,onFocus:this.blankField,onBlur:this.restoreOnBlur,onChange:this.handleFieldChange,onKeyPress:this.enterKeyUpdate,"data-tag":"hrsField",ref:"hrsField"}),":",React.createElement("input",{type:"text",value:this.state.minField,onFocus:this.blankField,onBlur:this.restoreOnBlur,onChange:this.handleFieldChange,onKeyPress:this.enterKeyUpdate,"data-tag":"minField",ref:"minField"}),":",React.createElement("input",{type:"text",value:this.state.secField,onFocus:this.blankField,onBlur:this.restoreOnBlur,onChange:this.handleFieldChange,onKeyPress:this.enterKeyUpdate,"data-tag":"secField",ref:"secField"}),":",React.createElement("input",{type:"text",value:this.state.csField,onFocus:this.blankField,onBlur:this.restoreOnBlur,onChange:this.handleFieldChange,onKeyPress:this.enterKeyUpdate,"data-tag":"csField",ref:"csField"}),React.createElement("p",{className:"limitInputLabel",ref:"unitLabel"},"Hours : Minutes : Seconds :"+" "+"Centisecs ")))),React.createElement("div",{className:"tab"},React.createElement("input",{type:"radio",id:this.props.id+"-2",name:this.props.id}),React.createElement("label",{htmlFor:this.props.id+"-2"},"Sounds"),React.createElement("div",{className:"content"},React.createElement("table",null,React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"Sound Enabled:"),React.createElement("td",{className:"tableRight"},React.createElement("input",{type:"checkbox",defaultChecked:this.props.soundEnabled,onChange:this.updateSoundEnabled})))),React.createElement("div",{className:"updatableDivider"}),React.createElement("div",{className:"updatableWrapper"},React.createElement("table",null,React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"On Play:"),React.createElement("td",{className:"tableRight"},React.createElement("select",{value:""+this.state.onPlaySelectedSound,"data-tag":"onPlaySelectedSound",onChange:this.handleSoundChange},React.createElement("option",{value:""},"(none)"),soundOptionsList))),React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"On Pause:"),React.createElement("td",{className:"tableRight"},React.createElement("select",{value:""+this.state.onPauseSelectedSound,"data-tag":"onPauseSelectedSound",onChange:this.handleSoundChange},React.createElement("option",{value:""},"(none)"),soundOptionsList))),React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"On Reset:"),React.createElement("td",{className:"tableRight"},React.createElement("select",{value:""+this.state.onResetSelectedSound,"data-tag":"onResetSelectedSound",onChange:this.handleSoundChange},React.createElement("option",{value:""},"(none)"),soundOptionsList))),React.createElement("tr",null,React.createElement("td",{className:"tableLeft"},"On End:"),React.createElement("td",{className:"tableRight"},React.createElement("select",{value:""+this.state.onEndSelectedSound,"data-tag":"onEndSelectedSound",onChange:this.handleSoundChange},React.createElement("option",{value:""},"(none)"),soundOptionsList)))))))),React.createElement("div",{className:"updateButtonWrapper",ref:"updateButtonWrapper"},React.createElement("button",{type:"button",ref:"moduleLimitButton",onClick:this.updatePropsWithState},"Update"),React.createElement("button",{type:"button",ref:"moduleLimitButton",onClick:this.resetModuleState,"data-tag":"resetButton"},"Revert")))}});var Main=React.createClass({displayName:"Main",mixins:[React.addons.LinkedStateMixin],getInitialState:function(){var initialModuleProps=this.getDefaultModuleProps(true);labelToId[initialModuleProps.label]=initialModuleProps.id;var initialIdToIndex={};initialIdToIndex[initialModuleProps.id]=0;return{activeLink:"main",modules:[React.createElement(Module,React.__spread({},initialModuleProps,{key:initialModuleProps.id}))],idToIndex:initialIdToIndex,activeIndex:0,previousActiveIndex:-1,highPrecisionTiming:true,playbackAnimationEnabled:false,defaultModuleLabel:null}},createNewModule:function(newModuleProps){if(newModuleProps==undefined)newModuleProps=this.getDefaultModuleProps();while(labelToId[newModuleProps.label])newModuleProps.label=newModuleProps.label+".1";labelToId[newModuleProps.label]=newModuleProps.id;return React.createElement(Module,React.__spread({},newModuleProps,{key:newModuleProps.id}))},getDefaultModuleProps:function(firstModule){var props={id:Date.now().valueOf(),autorun:false,timerMax:0,countUp:true,soundEnabled:true,onPlaySound:"",onPauseSound:"",onResetSound:"",onEndSound:"",m_moduleUpdate:this.moduleUpdate,m_delete:this.delete,s_onNext:this.next,s_onPrevious:this.previous};if(firstModule)props.label="Stopwatch0";else props.label="Stopwatch"+this.state.modules.length;return props},moduleUpdate:function(newProps,oldProps){var moduleId=newProps.id;var moduleIndex=this.state.idToIndex[moduleId];console.log("Updating module "+moduleId+"...with index "+moduleIndex);var newModule=React.createElement(Module,React.__spread({},newProps,{key:moduleId}));var newState=React.addons.update(this.state,{modules:{$splice:[[moduleIndex,1,newModule]]}});if(newProps.label!=oldProps.label){labelToId[newProps.label]=moduleId;delete labelToId[oldProps.label]}this.setState(newState)},next:function(previousModuleEndTime){console.log("next was called.");var nextIndex=this.computeNextModule();if(nextIndex!==this.state.activeIndex){this.cycleActive(this.state.activeIndex,nextIndex,previousModuleEndTime);return true}return false},computeNextModule:function(){var nextIndex=this.state.activeIndex+1;if(nextIndex>=this.state.modules.length)nextIndex=0;return nextIndex},previous:function(){console.log("previous was called.");var nextIndex=this.state.activeIndex-1;if(nextIndex<0)nextIndex=this.state.modules.length-1;this.cycleActive(this.state.activeIndex,nextIndex,null)},cycleActive:function(currentIndex,nextIndex,prevModuleEndTime){if(currentIndex!=nextIndex){console.log("Cycling active modules: "+currentIndex+" to "+nextIndex);console.log("highPrecisionTiming is: "+this.state.highPrecisionTiming);if(this.state.highPrecisionTiming)prevEndTime=prevModuleEndTime;else prevEndTime=null;this.setState({activeIndex:nextIndex,previousActiveIndex:currentIndex})}},add:function(){console.log("add was called.");var currState=this.state;var newModule;var newModuleProps=this.getDefaultModuleProps();if(currState.defaultModuleLabel){var clonedModuleProps=currState.modules[currState.idToIndex[labelToId[currState.defaultModuleLabel]]].props;newModuleProps=React.addons.update(clonedModuleProps,{id:{$set:newModuleProps.id}})}newModule=this.createNewModule(newModuleProps);var newIdToIndex={};newIdToIndex[newModule.props.id]=currState.modules.length;var newState=React.addons.update(this.state,{modules:{$push:[newModule]},idToIndex:{$merge:newIdToIndex}});this.setState(newState)},"delete":function(deleteId){console.log("delete was called. parameter: "+deleteId);var targetIndex=this.state.idToIndex[deleteId];var newState=React.addons.update(this.state,{modules:{$splice:[[targetIndex,1]]}});if(this.state.defaultModuleLabel===this.state.modules[targetIndex].props.label)newState.defaultModuleLabel=null;if(targetIndex<this.state.activeIndex){newState.activeIndex=this.state.activeIndex-1;newState.previousActiveIndex=this.state.activeIndex>=newState.modules.length?-1:this.state.activeIndex}else if(targetIndex===this.state.activeIndex&&targetIndex===this.state.modules.length-1){newState.activeIndex=this.state.activeIndex-1;newState.previousActiveIndex=-1}else{newState.previousActiveIndex=-1}var newIdToIndex={};var newLabelToId={};for(var i=0;i<newState.modules.length;i++){var selectedModuleProps=newState.modules[i].props;newIdToIndex[selectedModuleProps.id]=i;newLabelToId[selectedModuleProps.label]=selectedModuleProps.id}newState.idToIndex=newIdToIndex;labelToId=newLabelToId;this.setState(newState)},setDefaultModule:function(event){var newDefaultModuleLabel=event.target.value;this.setState({defaultModuleLabel:newDefaultModuleLabel})},ignoreClick:function(event){event.preventDefault();event.stopPropagation()},navigateLink:function(event){var target=event.target.dataset.tag;var newState=null;switch(target){case"main":case"about":case"tutorial":newState={};newState.activeLink=target;break;case"github":window.open("https://github.com/analytalica/ProtoWatch")}if(newState)this.setState(newState)},render:function(){var currState=this.state;var currentActiveStopwatch=currState.modules[currState.activeIndex];var defaultModuleSelectOptions=[];for(var i=0;i<currState.modules.length;i++){var iteratedLabel=currState.modules[i].props.label;defaultModuleSelectOptions.push(React.createElement("option",{value:iteratedLabel},iteratedLabel))}var appWrapperClasses="appWrapper";if(!currState.playbackAnimationEnabled)appWrapperClasses+=" noAnimate";var main_lowerClasses="";if(currState.activeLink!=="main")main_lowerClasses+="hidden";var aboutClasses="hidden";if(currState.activeLink==="about")aboutClasses="";return React.createElement("div",null,React.createElement("div",{id:"topbar_wrapper"},React.createElement("div",{id:"topbar",className:"noSelect"},React.createElement("div",{id:"menuWrapper"},React.createElement("ul",null,React.createElement("li",{className:this.state.activeLink=="main"?"active":null,onClick:this.navigateLink,"data-tag":"main"},"main"),React.createElement("li",{className:this.state.activeLink=="about"?"active":null,onClick:this.navigateLink,"data-tag":"about"},"about"),React.createElement("li",{className:this.state.activeLink=="tutorial"?"active":null,onClick:this.navigateLink,"data-tag":"tutorial"},"tutorial"),React.createElement("li",{onClick:this.navigateLink,"data-tag":"github"},"github"))),React.createElement("div",{id:"logo"}),React.createElement("div",{className:"clearfix"}))),React.createElement("div",{className:appWrapperClasses},React.createElement("div",{className:currState.modules.length==1?"hideLeftRightButtons":""},React.createElement(Stopwatch,React.__spread({},currentActiveStopwatch.props,{key:currentActiveStopwatch.props.id}))),React.createElement("div",{id:"main_lower",className:main_lowerClasses},React.createElement("div",{id:"moduleList"},currState.modules,React.createElement("div",{id:"addModuleButton",className:"Module noSelect",onClick:this.add},React.createElement("p",null,"+"),React.createElement("p",null,React.createElement("select",{value:""+currState.defaultModuleLabel,onClick:this.ignoreClick,onChange:this.setDefaultModule},React.createElement("option",{value:""},"(default)"),defaultModuleSelectOptions)))),React.createElement("div",{id:"settings_wrapper"},React.createElement("div",{id:"settings"},React.createElement("i",{id:"settings_icon",className:"fa fa-cog"}),React.createElement("div",{id:"settings_options"},React.createElement("p",null,React.createElement("input",{type:"checkbox",defaultChecked:currState.highPrecisionTiming,checkedLink:this.linkState("highPrecisionTiming")}),"High Precision Timing"),React.createElement("p",null,React.createElement("input",{type:"checkbox",defaultChecked:currState.playbackAnimationEnabled,checkedLink:this.linkState("playbackAnimationEnabled")}),"Active CSS Animations"),React.createElement("p",null,currentActiveStopwatch.props.id," | v1.0.0")))))),React.createElement("div",{id:"aboutWrapper",className:aboutClasses},React.createElement("div",{id:"about"},React.createElement("img",{src:"img/logo_about.png",id:"about_logo"}),React.createElement("p",null,"ProtoWatch is a programmable stopwatch webapp that enables you to program multiple,"+" "+"individually configurable stopwatches in order. Each stopwatch can be controlled manually"+" "+"when it becomes active, or set to run automatically when the previous stopwatch completes."),React.createElement("p",null,"Featuring:"),React.createElement("ul",null,React.createElement("li",null,React.createElement("strong",null,"A programmable stopwatch")," composed of multiple stopwatches, each feature"+" "+"complete with play/pause, optional time limits, and modifiable count direction."),React.createElement("li",null,React.createElement("strong",null,"High precision timing,")," enabling no loss of time precision when"+" "+"transitioning between stopwatches chained together with automatic playback."),React.createElement("li",null,React.createElement("strong",null,"Audio feedback")," using the ",React.createElement("a",{href:"http://www.createjs.com/soundjs"},"SoundJS"+" "+"library")," indicating when stopwatches are played, paused, and/or completed."),React.createElement("li",null,React.createElement("strong",null,"Mobile and desktop support")," with an adaptive design for small and high"+" "+"resolution displays alike.")),React.createElement("p",null,"It's perfect for pre-planning timed events, such as while working out, using the built-in audio"+" "+"feedback to alert you when it's time to start or stop. Or, use it like an ordinary stopwatch"+" "+"with superpowers, like the ability to switch the count direction in real time and audio cues for"+" "+"when you interact with the stopwatch controls."),React.createElement("p",null,"ProtoWatch is in active development and is ",React.createElement("a",{href:"https://github.com/analytalica/ProtoWatch"},"open"+" "+"source,")," meaning you can take it, contribute to it, build it, and make it your own.",React.createElement("strong",null," Feature requests")," are"+" "+"made through the ",React.createElement("a",{href:"https://github.com/analytalica/ProtoWatch/issues"},"Issues page")," on GitHub."))))},componentDidMount:function(){console.log("Main component mounted!");createjs.Sound.registerSounds(soundList,soundPath);if(window.innerWidth>640){Ps.initialize(document.getElementById("moduleList"),{useBothWheelAxes:true,swipePropagation:true,wheelPropagation:true});Ps.ready=true}this.componentDidUpdate(null,{activeIndex:-1});React.ready=true},componentDidUpdate:function(prevProps,prevState){var currState=this.state;var nextModule=document.getElementById(currState.modules[currState.activeIndex].props.id);if(nextModule)nextModule.classList.add("activeModule");if(currState.activeIndex!=prevState.activeIndex){var previousModule=null;if(currState.previousActiveIndex!=null&&currState.previousActiveIndex!=-1)previousModule=document.getElementById(currState.modules[currState.previousActiveIndex].props.id);if(previousModule)previousModule.classList.remove("activeModule")}if(currState.modules.length===1){document.querySelector("[id='"+currState.modules[0].props.id+"'] .deleteButton").style.display="none"}else{document.querySelector("[id='"+currState.modules[0].props.id+"'] .deleteButton").style.display="block"}if(Ps.ready){if(prevState.activeLink!==currState.activeLink){Ps.destroy(document.getElementById("moduleList"));Ps.initialize(document.getElementById("moduleList"),{useBothWheelAxes:true,swipePropagation:true,wheelPropagation:true})}Ps.update(document.getElementById("moduleList"))}}});React.render(React.createElement(Main,null),document.getElementById("container"));window.addEventListener("resize",function(){if(React.ready){if(window.innerWidth<=640){if(Ps.ready){Ps.destroy(document.getElementById("moduleList"));Ps.ready=false}}else{if(Ps.ready){Ps.update(document.getElementById("moduleList"))}else{Ps.initialize(document.getElementById("moduleList"),{useBothWheelAxes:true,swipePropagation:true,wheelPropagation:true});Ps.ready=true}}}});
